name: Release to Maven Central

on:
  push:
    tags:
      - 'v*'
  # Allow manual workflow runs
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Correct Permissions
        run: |
          find bin/ -name "*.sh" | xargs chmod +x
          chmod +x ./mvnw

      - name: Test Sonatype login via API
        run: |
          curl -u "${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }}" \
          -X GET "https://oss.sonatype.org/service/local/status"

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          server-id: ossrh
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Check settings.xml
        run: |
          # Will remove the sensitive information from the output
          cat ~/.m2/settings.xml
          echo
          echo "Validating settings.xml configuration..."
          # Check if settings.xml is correctly configured (without exposing contents)
          if ! grep -q "<id>ossrh</id>" ~/.m2/settings.xml; then
            echo "settings.xml is not configured correctly for Sonatype OSSRH."
            exit 1
          fi
          # Check if GPG configuration exists (using extended regex for any passphrase content)
          if ! grep -E "<passphrase>.+</passphrase>" ~/.m2/settings.xml; then
            echo "settings.xml is not configured correctly for gpg-passphrase."
            exit 1
          fi
          echo "settings.xml configuration validated successfully"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test
        run: mvn clean verify -Pci

      - name: Deploy to Maven Central
        run: |
          # mvn clean deploy -P deploy,release -DskipTests
          ./bin/release/maven-deploy.sh
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}